plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.gigastack'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
ext {
	jjwtVersion = '0.12.3'
}
dependencies {
	/* ───── Web & Validation ───── */
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.apache.commons:commons-lang3'
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8")

	implementation("org.springframework.boot:spring-boot-starter-websocket")
	/* ───── Data / JPA / DB ───── */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	implementation "org.flywaydb:flyway-core"
	implementation("org.flywaydb:flyway-database-postgresql")

	/* ───── Security / JWT ───── */
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	runtimeOnly    "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtimeOnly    "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	/* ───── Lombok ───── */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	/* ───── Тесты ───── */
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
